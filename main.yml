---
- name: Set up NUT Server on main Pi.
  hosts: primary
  become: true
  gather_facts: true
  tags: primary

  vars_files:
    - config.yml
    - config-secrets.yml

  roles:
    - geerlingguy.security

  handlers:
    - name: restart nut-server
      service:
        name: nut-server
        state: restarted
      when: not ansible_check_mode

    - name: restart nut-monitor
      service:
        name: nut-monitor
        state: restarted
      when: not ansible_check_mode

  tasks:
    - name: Ensure NUT is installed.
      package:
        name: nut
        state: present

    - name: Run nut-scanner to gather UPS information
      command: nut-scanner
      register: nut_scanner_output
      changed_when: false
    
    - name: Set UPS variables from nut-scanner output
      set_fact:
        nut_ups_driver: "{{ nut_scanner_output.stdout | regex_search('driver = \"(.*?)\"', '\\1') | first }}"
        nut_ups_product: "{{ nut_scanner_output.stdout | regex_search('product = \"(.*?)\"', '\\1') | first }}"
        nut_ups_port: "{{ nut_scanner_output.stdout | regex_search('port = \"(.*?)\"', '\\1') | first }}"
        nut_ups_vendorid: "{{ nut_scanner_output.stdout | regex_search('vendorid = \"(.*?)\"', '\\1') | first }}"
        nut_ups_productid: "{{ nut_scanner_output.stdout | regex_search('productid = \"(.*?)\"', '\\1') | first }}"
        nut_ups_bus: "{{ nut_scanner_output.stdout | regex_search('bus = \"(.*?)\"', '\\1') | first }}"

    - name: Fail if essential facts are missing
      fail:
        msg: "Failed to extract necessary UPS configuration facts from nut-scanner output!"
      when: 
        - nut_ups_driver is not defined
        - nut_ups_product is not defined
        - nut_ups_port is not defined
        - nut_ups_vendorid is not defined
        - nut_ups_productid is not defined
        - nut_ups_bus is not defined

    - name: Change NUT UPS configuration.
      blockinfile:
        path: /etc/nut/ups.conf
        marker: "# {mark} ANSIBLE MANAGED BLOCK"
        block: |
          [{{ nut_ups_name }}]
              driver = "{{ nut_ups_driver }}"
              product = "{{nut_ups_product}}"
              desc = "{{ nut_ups_description }}"
              port = "{{ nut_ups_port }}"
              vendorid = "{{ nut_ups_vendorid }}"
              productid = "{{ nut_ups_productid }}"
              bus = "{{ nut_ups_bus }}"
        state: present
        mode: 0640
      notify: restart nut-server

    - name: Change UPSD configuration.
      lineinfile:
        path: /etc/nut/upsd.conf
        regexp: '^LISTEN 0.+'
        line: "LISTEN 0.0.0.0 3493"
        insertafter: EOF
        state: present
        mode: 0640
      notify: restart nut-server

    - name: Configure UPSD users.
      blockinfile:
        path: /etc/nut/upsd.users
        marker: "# {mark} ANSIBLE MANAGED BLOCK"
        block: "{{ nut_upsd_users }}"
        state: present
        mode: 0640
      notify: restart nut-server

    - name: Configure UPS Monitor.
      lineinfile:
        path: /etc/nut/upsmon.conf
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        insertafter: EOF
        state: present
        mode: 0640
      notify: restart nut-monitor
      with_items:
        - regexp: '^MONITOR.+'
          line: "MONITOR {{ nut_ups_name }}@localhost 1 {{ nut_ups_admin_user }} {{ nut_ups_admin_password }} primary"
        - regexp: '^FINALDELAY.+'
          line: "FINALDELAY {{ nut_shutdown_finaldelay }}"

    - name: Configure NUT mode.
      lineinfile:
        path: /etc/nut/nut.conf
        regexp: '^MODE.+'
        line: "MODE=netserver"
        state: present
        mode: 0640
      notify: restart nut-server

    - name: Ensure NUT is running (if configured).
      service:
        name: "{{ item }}"
        state: "{{ nut_state }}"
        enabled: "{{ nut_enabled }}"
      with_items:
        - nut-server
        - nut-monitor
      when: not ansible_check_mode

- name: Set up NUT Client on other servers.
  hosts: clients
  become: true
  gather_facts: true
  tags: client

  vars_files:
    - config.yml
    - config-secrets.yml

  roles:
    - geerlingguy.nut_client
